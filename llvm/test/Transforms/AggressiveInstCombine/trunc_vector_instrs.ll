; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -aggressive-instcombine -S | FileCheck %s

define <4 x i16> @shuffle(<2 x i8> %a, <2 x i8> %b) {
; CHECK-LABEL: @shuffle(
; CHECK-NEXT:    [[ZEXTA:%.*]] = zext <2 x i8> [[A:%.*]] to <2 x i32>
; CHECK-NEXT:    [[ZEXTB:%.*]] = zext <2 x i8> [[B:%.*]] to <2 x i32>
; CHECK-NEXT:    [[SHUF:%.*]] = shufflevector <2 x i32> [[ZEXTA]], <2 x i32> [[ZEXTB]], <4 x i32> <i32 3, i32 2, i32 1, i32 0>
; CHECK-NEXT:    [[TRUNC:%.*]] = trunc <4 x i32> [[SHUF]] to <4 x i16>
; CHECK-NEXT:    ret <4 x i16> [[TRUNC]]
;
  %zexta = zext <2 x i8> %a to <2 x i32>
  %zextb = zext <2 x i8> %b to <2 x i32>
  %shuf = shufflevector <2 x i32> %zexta, <2 x i32> %zextb, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %trunc = trunc <4 x i32> %shuf to <4 x i16>
  ret <4 x i16> %trunc
}

define <4 x i16> @shuffle_const(<2 x i8> %a, <2 x i8> %b) {
; CHECK-LABEL: @shuffle_const(
; CHECK-NEXT:    [[ZEXTA:%.*]] = zext <2 x i8> [[A:%.*]] to <2 x i32>
; CHECK-NEXT:    [[ZEXTB:%.*]] = zext <2 x i8> [[B:%.*]] to <2 x i32>
; CHECK-NEXT:    [[SHUF:%.*]] = shufflevector <2 x i32> <i32 1, i32 2>, <2 x i32> <i32 3, i32 7>, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
; CHECK-NEXT:    [[TRUNC:%.*]] = trunc <4 x i32> [[SHUF]] to <4 x i16>
; CHECK-NEXT:    ret <4 x i16> [[TRUNC]]
;
  %zexta = zext <2 x i8> %a to <2 x i32>
  %zextb = zext <2 x i8> %b to <2 x i32>
  %shuf = shufflevector <2 x i32> <i32 1, i32 2>, <2 x i32> <i32 3, i32 7>, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %trunc = trunc <4 x i32> %shuf to <4 x i16>
  ret <4 x i16> %trunc
}

define <2 x i16> @extract_insert(<2 x i8> %a, <2 x i8> %b) {
; CHECK-LABEL: @extract_insert(
; CHECK-NEXT:    [[ZEXTA:%.*]] = zext <2 x i8> [[A:%.*]] to <2 x i32>
; CHECK-NEXT:    [[ZEXTB:%.*]] = zext <2 x i8> [[B:%.*]] to <2 x i32>
; CHECK-NEXT:    [[EXTR:%.*]] = extractelement <2 x i32> [[ZEXTA]], i32 0
; CHECK-NEXT:    [[INSR:%.*]] = insertelement <2 x i32> [[ZEXTB]], i32 [[EXTR]], i32 1
; CHECK-NEXT:    [[TRUNC:%.*]] = trunc <2 x i32> [[INSR]] to <2 x i16>
; CHECK-NEXT:    ret <2 x i16> [[TRUNC]]
;
  %zexta = zext <2 x i8> %a to <2 x i32>
  %zextb = zext <2 x i8> %b to <2 x i32>
  %extr = extractelement <2 x i32> %zexta, i32 0
  %insr = insertelement <2 x i32> %zextb, i32 %extr, i32 1
  %trunc = trunc <2 x i32> %insr to <2 x i16>
  ret <2 x i16> %trunc
}
